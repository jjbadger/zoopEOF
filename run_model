## Empirical Orthogonal Function (EOF) on zooplankton survey data. ##
## covariates: AMO, NAO, SST
## EPU: All 
## last edited: 12_05_2020

library(TMB)
library(VAST)
library(FishStatsUtils)
library(dplyr)

# directory
rootdir = "~/Desktop/indicators"
Date = Sys.Date()
datedir = file.path( rootdir, Date)
dir.create(datedir)

#moddir
mod<-"eof_NEUS_zoop"
rundir = file.path( datedir, mod )
dir.create(rundir)

# pull survey data
ecomon_dat <- readRDS(file.path(rootdir,"ecomon.rds"))

spp_list <- c("calfin", "cham", "ctyp", "tlong", "pseudo")
season="spring"
epu="All"

all_dat <- ecomon_dat %>%
  dplyr::filter(spp %in% spp_list,
                season == !!season,
                year >= 2000) %>%
  dplyr::mutate(species_number = group_indices(., spp)-1,
                areaswept_km2 = 0.01,
                catch_ab = log(abundance + 1),
                bottom_depth = bottom_depth/100) %>%
  dplyr::select(species_number,
                year,
                day,
                sfc_temp,
                abundance,
                catch_ab,
                areaswept_km2,
                bottom_depth,
                EPU,
                lat,
                lon) %>%
  arrange(species_number, year, lat, lon) %>%
  data.frame()

# pull AMO data
library(reshape2)
amo<-read.table(file.path(rootdir,"amo.txt"), header=T)
colnames(amo)<-c("year", 1:12)
amo<-melt(amo, id.vars = "year", measure.vars =colnames(amo)[2:13])
colnames(amo) =  c("year","month","index")
amo$month<-as.integer(as.character(amo$month))

all_dat$month <- cut(all_dat$day,
                     breaks=c(1,31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365),
                     labels = 1:12)
all_dat$month = as.integer(as.character(all_dat$month))

all_dat$amo<-NA

for(i in 1:length(all_dat$year)){
  year.i<-all_dat$year[i]
  month.i<-all_dat$month[i]
  all_dat$amo[i]<-amo$index[amo$year==year.i & amo$month==month.i]
}

########NAO

nao<-read.csv(file.path(rootdir,"nao.csv"), header=F)
nao<-nao[,c(4:6)]
colnames(nao) =  c("year","month","index")

all_dat$nao<-NA

for(i in 1:length(all_dat$year)){
  year.i<-all_dat$year[i]
  month.i<-all_dat$month[i]
  all_dat$nao[i]<-nao$index[nao$year==year.i & nao$month==month.i]
}

#pull NAO data

nao<-read.csv(file.path(rootdir,"nao.csv"), header=F)
nao<-nao[,c(4:6)]
colnames(nao) =  c("year","month","index")

all_dat$nao<-NA

for(i in 1:length(all_dat$year)){
  year.i<-all_dat$year[i]
  month.i<-all_dat$month[i]
  all_dat$nao[i]<-nao$index[nao$year==year.i & nao$month==month.i]
}



# center SST 
all_dat$sfc_temp<-(all_dat$sfc_temp-mean(all_dat$sfc_temp, na.rm=T))



covariate_data <- data.frame(Year = all_dat$year,   #if covariates are static, fill with 'NA'
                             Lat = all_dat$lat,
                             Lon = all_dat$lon,
                             amo = all_dat$amo,
                             nao = all_dat$nao,
                             sfc = all_dat$sfc_temp)

covariate_data<-covariate_data[complete.cases(covariate_data),]



strata_limits_all <- list('All_areas' = 1:1e5)

#settings
settings = make_settings( n_x = 1000,
                          Region = "northwest_atlantic",
                          fine_scale = TRUE,
                          strata.limits = strata_limits_all,
                          purpose="EOF2",
                          n_categories = 2,          
                          use_anisotropy = FALSE,
                          ObsModel = c(1,4),
                          RhoConfig = c("Beta1" = 0, "Beta2" = 0,
                                        "Epsilon1" = 0, "Epsilon2" = 0))

settings$Options[c("Calculate_Range","Calculate_effective_area")] = TRUE
settings$Options[c("zerosum_penalty")]=100              # force the loadings matrices (modes of variability) to be zero-centered to retain presistent spatial differences in omega                    

# epu <- "GB"                           #use this chunk of code, along with associated line in fit_model, if desire regional-specific 
#settings$epu_to_use <- switch(epu,
#                             "MAB" = "Mid_Atlantic_Bight",
#                              "GOM" = "Gulf_of_Maine",
#                              "GB" = "Georges_Bank",
#                              "SS" = "Scotian_Shelf",
#                              "All" = "All")

#run
fit = fit_model( settings=settings,
                 #epu_to_use = settings$epu_to_use,
                 Lat_i=all_dat[,'lat'],
                 Lon_i=all_dat[,'lon'],
                 t_i=all_dat[,"year"],
                 c_i=all_dat[,"species_number"],
                 b_i= all_dat[, "catch_ab"],
                 a_i=all_dat[,'areaswept_km2'],
                 working_dir = rundir,
                 covariate_data = covariate_data,
                 X1_formula=formula,            # covariates on encounter probability, add line X2_formula = formula if on positive catch rates as well 
                 anisotropy = FALSE,
                 test_fit = FALSE,
                 newtonsteps = 0,
                 getsd = TRUE,
                 run_model = TRUE,
                 Use_REML = TRUE,
                 knot_method = "grid",
                 optimize_args = list("lower" = -Inf,
                                      "upper" = Inf),
                 bias.correct.control = list("nsplit" = 100))

category_names = spp_list

#plot

results = plot( fit, category_names=category_names,
                check_residuals=TRUE,
                plot_set=c(3,16),
                working_dir=paste0(rundir,"/"))

plot_factors( Report=fit$Report,
              ParHat=fit$ParHat,
              Data=fit$data_list,
              category_names = category_names,
              mapdetails_list=results$map_list,
              Year_Set=fit$year_labels, plotdir=paste0(rundir,"/"))

saveRDS(fit, file = paste0(rundir, "/fit.rds"))
save.image(file = paste0(rundir, "/output.RData"))
